module ULA(sel1,sel0,rst,clk,a,b,c,d,e,f,g);
    
	 reg [3:0]state;
	 reg [3:0]result; 
	 reg [6:0]segments;
	 
	 always @(result)begin
        case ({result[3],result[2], result[1], result[0]})
            4'd7: segments = 7'b0001111; //7
            4'd6: segments = 7'b0100000; //6
            4'd5: segments = 7'b0100100; //5
            4'd4: segments = 7'b1001100; //4
            4'd3: segments = 7'b0000110; //3
            4'd2: segments = 7'b0010010; //2
            4'd1: segments = 7'b1001111; //1
            4'd0: segments = 7'b0000001; //0
            default: segments = 7'b1111111; //off
        endcase
    end
	 
	 assign {ld3,ld2,ld1,ld0} = result;
    assign {a,b,c,d,e,f,g} = segments;
    
endmodule