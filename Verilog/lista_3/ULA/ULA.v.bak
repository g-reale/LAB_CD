module ULA(a3,a2,a1,a0,b3,b2.b1,b0,sel1,sel0,a,b,c,d,e,f,g);
    
	 input wire a3,a2,a1,a0;
	 input wire b3,b2.b1,b0;
	 input wire sel1,sel0;
	 output a,b,c,d,e,f,g;
	 
	 always @*
	 
    reg [6:0]segments;
    reg [2:0]result;
	 
	 always @(result)begin
        case ({result[2], result[1], result[0]})
            3'd7: segments = 7'b0001111; //7
            3'd6: segments = 7'b0100000; //6
            3'd5: segments = 7'b0100100; //5
            3'd4: segments = 7'b1001100; //4
            3'd3: segments = 7'b0000110; //3
            3'd2: segments = 7'b0010010; //2
            3'd1: segments = 7'b1001111; //1
            3'd0: segments = 7'b0000001; //0
            default: segments = 7'b1111111; //off
        endcase
    end
	 
    assign G_HEX4 = segments;
    
endmodule